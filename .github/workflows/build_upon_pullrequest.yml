name: Build conda packages upon pull request
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  get_changed_folders:  # job 1; # Get changed folders github action, https://github.com/marketplace/actions/get-changed-folders
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }} #ubuntu-latest
    strategy:
      fail-fast: false #  if one of the jobs in the matrix expansion fails, the rest of the jobs will be cancelled
      matrix:
        os: ["self-hosted", "macos-latest"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Install yq
        uses: chrisdickinson/setup-yq@latest
        with:
          yq-version: v4.25.1

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v9.3
        with:
            files: 'recipes'

      - name: List all modified recipes
        id: changed-recipes
        run: |
            changed=$(for file in ${{ steps.changed-files.outputs.all_modified_files }}; do dirname $file; done | sort | uniq | tr '\n' ' ')
            changed_no_noarch=""
            for recipe in $changed; do
              noarch=$(grep -v '{' $recipe/meta.yaml | yq '.build.noarch')
              if [[ -z "$noarch" ]]; then
                # if noarch is empty, then this recipe is not no arch and should be built for mac and linux.
                changed_no_noarch=" $recipe"
              fi
            done
            if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
              echo "Running on macos, setting changed to only those that are not noarch"
              changed=$(echo $changed_no_noarch | xargs) # xarg to remove any trailing spaces.
            fi
            echo "::set-output name=changed_recipes::$changed"

      - name: Check directory matches recipe name
        if: ${{ steps.changed-recipes.outputs.changed_recipes != '' }}
        run: |
            status=0
            for recipe in ${{ steps.changed-recipes.outputs.changed_recipes }}; do
              recipe_in_meta=$(grep -v '{' $recipe/meta.yaml | yq '.package.name')
              recipe_dir=$(echo $recipe | sed 's+recipes/++' )
              if [[ "$recipe_dir" != "$recipe_in_meta" ]]; then
                echo "Recipe directory is        : $recipe_dir"
                echo "Recipe name in meta.yaml is: $recipe_in_meta"
                echo "They should be the same."
                status=1
              fi
            done
            exit $status


      - name: Cache conda
        if: ${{ steps.changed-recipes.outputs.changed_recipes != '' }}
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if build-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('.github/build-environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v2
        if: ${{ steps.changed-recipes.outputs.changed_recipes != '' }}
        with:
            activate-environment: test
            environment-file: .github/build-environment.yml
            channels: ebi-gene-expression-group,conda-forge,bioconda,defaults

      - name: Do a test build of modified recipes
        if: ${{ steps.changed-recipes.outputs.changed_recipes != '' }}
        run: |
            for recipe in ${{ steps.changed-recipes.outputs.changed_recipes }}; do conda build $recipe; done

      - name: Derive built objects
        if: ${{ steps.changed-recipes.outputs.changed_recipes != '' }}
        id: find-built-objects
        run: |
            subdirs=$(conda config --show | yq '.subdirs' | sed 's/- //' | tr '\n' ' ')
            packages=""
            for dir in $subdirs; do
              for recipe_dir in ${{ steps.changed-recipes.outputs.changed_recipes }}; do
                recipe=$(basename $recipe_dir);
                if [ -f $CONDA_PREFIX/conda-bld/$dir/$recipe-*.bz2 ]; then
                  pkg=$(ls $CONDA_PREFIX/conda-bld/$dir/$recipe-*.bz2 | head -n 1)
                  packages=$packages" "$pkg
                fi
              done
            done

            echo "::set-output name=built_objects::$(echo $packages | xargs)";

      - name: Upload to Anaconda
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && steps.changed-recipes.outputs.changed_recipes != '' }}
        run: >-
            for built_package in ${{ steps.find-built-objects.outputs.built_objects }}; do
                echo "Found built package $built_package to upload...";
                anaconda -t ${{ secrets.ANACONDA_TOKEN_ATLAS_CONDA }} upload -u ebi-gene-expression-group $built_package;
            done
